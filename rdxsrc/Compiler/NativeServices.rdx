using Core;
using Core.RDX;

namespace RDX
{
	namespace Compiler
	{
		public enum ErrorCode
		{
			NoError		 									=	0,
			ExpectedValueExpression							=	1,
			CouldNotConvert									=	2,
			CouldNotResolveOperator							=	3,
			OperatorNotMethod								=	4,
			CanNotStripConst								=	5,
			UnboundInstanceCall								=	6,
			AmbiguousMethodCall								=	7,
			AbstractMethodInvokedExplicitly					=	8,
			CouldNotMatchOverload							=	9,
			ExpectedValueForIndex							=	10,
			ArrayIndexCountMismatch							=	11,
			CouldNotFindIndexMethod							=	12,
			IndexMemberNotMethod							=	13,
			IndexedObjectWasValue							=	14,
			CouldNotFindSetIndexMethod						=	15,
			SetIndexMemberNotMethod							=	16,
			TypeDoesNotHaveInitialize						=	17,
			InitializeOnNonReferenceType					=	18,
			InitializeMethodReturnsValues					=	19,
			ParameterlessInitializerOnMultidimensionalArray	=	20,
			InitializerDimensionNotConstant					=	21,
			InitializerDimensionWrongType					=	22,
			NegativeDimension								=	23,
			DimensionInitializerMismatch					=	24,
			InitializerOnNonStructuredType					=	25,
			PropertyAlreadyInitialized						=	26,
			InitializerPropertyNotFound						=	27,
			ConditionalExpressionNotValue					=	28,
			TernaryPairResolvesToMultipleInterfaces			=	29,
			TernaryPairNotConvertable						=	30,
			DelegatedBoundMethod							=	31,
			CouldNotMatchDelegate							=	32,
			InaccessiblePrivateMember						=	33,
			InaccessibleProtectedMember						=	34,
			UnresolvedName									=	35,
			AccessedExternalLocal							=	36,
			UnresolvedMember								=	37,
			ExpectedStaticMember							=	38,
			ExpectedInstanceMember							=	39,
			CanNotAccessArrayIntercept						=	40,
			CalledNonMethod									=	41,
			CalledIntercept									=	42,
			TemplateFromNonStructuredType					=	43,
			TemplateParameterMismatch						=	44,
			CastToNonType									=	45,
			DelegatedToMultipleTypes						=	46,
			BadDelegation									=	47,
			ExpectedExpression								=	48,
			NewCreatedNonType								=	49,
			NewInterface									=	50,
			NewAbstractType									=	51,
			NewDelegate										=	52,
			ExpectedDimensionsForArrayCreation				=	53,
			DuplicateSymbol									=	54,
			CouldNotResolveNamespace						=	55,
			TooManyTemplates								=	56,
			BadDeclInNamespace								=	57,
			CreatedArrayOfVarying							=	58,
			ArraysNotAllowed								=	59,
			ExpectedTypeReference							=	60,
			NewTemplate										=	61,
			UnexpectedDimensions							=	62,
			ExpectedDimensions								=	63,
			VaryingParameterInNonNative						=	64,
			VaryingReturnType								=	65,
			InterfaceResource								=	66,
			NonConstantInitializer							=	67,
			StringResource									=	68,
			InitializerNotCompatible						=	69,
			ResourceReferencesResource						=	70,
			BadPropertyInitializerType						=	71,
			BadEnumeratorValueType							=	72,
			StaticInstanceInitializer						=	73,
			ExpectedConstructorInitializer					=	74,
			OnlyPropertyInitializersAllowed					=	75,
			UnresolvedMemberInitializer						=	76,
			UninitializableMember							=	77,
			MemberAlreadyHasDefault							=	78,
			VaryingProperty									=	79,
			DuplicatedMethod								=	80,
			OverridedVirtualWithStatic						=	81,
			OverrideHasDifferentReturn						=	82,
			InvalidOverrideFlags							=	83,
			FinalMethodDoesNotOverride						=	84,
			InterfaceMethodMissing							=	85,
			StaticProperty									=	86,
			PropertyInitializerCountMismatch				=	87,
			MethodCollidesWithNonMethod						=	88,
			MethodVisibilityMismatch						=	89,
			MethodStaticMismatch							=	90,
			MethodInterceptMismatch							=	91,
			CoerceDoesNotReturnOneType						=	92,
			InvalidInterceptFormat							=	93,
			NonVirtualAbstract								=	94,
			StaticMethodInInterface							=	95,
			VirtualMethodInInterface						=	96,
			AbstractMethodInInterface						=	97,
			VirtualMethodInStructure						=	98,
			AbstractMethodHasCode							=	99,
			MethodMissingCode								=	100,
			SetIndexWithReturnValue							=	101,
			ExtendedTemplate								=	102,
			NonClassExtended								=	103,
			ExtendedNonClass								=	104,
			ExtendedFinalClass								=	105,
			DuplicateImplementations						=	106,
			UnsupportedDeclType								=	107,
			UnsupportedTypeMemberType						=	108,
			EnumInitializerNotInteger						=	109,
			DuplicateEnumValue								=	110,
			MissingZeroEnumerant							=	111,
			CircularDependency								=	112,
			ExpectedValue									=	113,
			TooFewValues									=	114,
			AssignRightSideNotValue							=	115,
			AssignLeftSideNotVariable						=	116,
			AssignTooFewValues								=	117,
			AssignRightSideTooFewValues						=	118,
			AssignToConstant								=	119,
			VaryingLocal									=	120,
			ReturnValueCountMismatch						=	121,
			UnresolvedFlowControlTarget						=	122,
			SwitchWithNoCases								=	123,
			MultipleSwitchDefaults							=	124,
			NonConstantSwitchCase							=	125,
			SwitchCaseWithNoCases							=	126,
			ExpressionStatementIsVariable					=	127,
			ThrowNonException								=	128,
			DuplicateCatch									=	129,
			OrphanControlPath								=	130,
			VerifiedCircularDependency						=	131,
			UnalignableByVal								=	132,
			MalformedSoftDependencies						=	133,
			MalformedAttributeTag							=	134,
			SymbolInsideNamedCppObject						=	135,
			UnspecifiedDelegateBinding						=	136,
			SelfBoundDelegateOutsideOfType					=	137,
			DelegatedStaticMethod							=	138,
			OverranThisParameter							=	139,
			NoCatchOrFinally								=	140,
			ReferencedAnonymous								=	141,
			UnexpectedEOF									=	142,
			NewlineInStringConstant							=	143,
			UnknownEscape									=	144,
			MemoryAllocationFailure							=	145,
			UnknownSymbol									=	146,
			UnknownToken									=	147,
			UnexpectedTokenType								=	148,
			ExpectedDifferentToken							=	149,
			RepeatedAttribute								=	150,
			IncompleteVariableDeclaration					=	151,
			ExpectedTerminus								=	152,
			UnsupportedOperator								=	153,
			MultipleValueOOA								=	154,
			OrphanAttributes								=	155,
			SpecifiedOuterDimensions						=	156,
			PolyNotAllowed									=	157,
			InitializedArrayWithProperties					=	158,
			InitializedObjectWithExpressions				=	159,
			InitializedNonProperty							=	160,
			ImplementedNonInterface							=	161,
			InternalError									=	162,
			InterfaceReturnTypeMismatch						=	163,
			PackageNotDefined								=	164,
			ResourceInstanceIncompatible					=	165,
		}

		public enum WarningCode
		{
			NoWarning										=	0,
			CouldNotFoldConstant							=	1,
			LossyConversion									=	2,
			NullPassedToNotNull								=	3,
			MaskedLocal										=	4,
			InvisibleSymbol									=	5,
			TruncatedValue									=	6,
			ImpossibleConversionCheck						=	7,
		}

		public class NativeServices
		{
			public native static function void Error(const CodeLocation cl, ErrorCode errorCode, string param1, string param2, string param3);
			public native static function void Warning(const CodeLocation cl, WarningCode errorCode, string param1, string param2, string param3);
			public native static function void ExportObject(notnull string path, notnull Object obj);
			public native static function byte const[] ReadFile(notnull string path);
			public native static function string HashString(notnull string str);
			public native static function void DebugBreak(Object obj);
			public native static function bool ConstFoldExists(notnull string coerceName);
			public native static function string ConstFold(notnull string coerceName, notnull string const[] values);
			public native static function largeuint StrToLargeUInt(string str);
			public native static function uint StrToEnumIntegral(string str);
			public native static function string, string ParseNumber(string str);
			public native static function string EscapeString(string str);
			public native static function void SortEnumerants(EnumerantObject[] enumerants);
			public native static function void DebugMessage(notnull string str);
			public native static function CodeEmission.POp, long, long, string, string EncodeConstant(notnull string typeName, notnull string constantValue, Constant.Signal signal);
			public native static function void DumpToken(notnull string debugMessage, const Token tk);
		}
	}
}
